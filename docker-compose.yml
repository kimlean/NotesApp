version: '3.8'

services:
  database:
    build:
      context: ./Database
      dockerfile: Dockerfile
    container_name: notes-db
    environment:
      SA_PASSWORD: lean@311291
      ACCEPT_EULA: Y
      MSSQL_PID: Express
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
      - ./Database/Scripts:/docker-entrypoint-initdb.d
    networks:
      - notes-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P lean@311291 -Q 'SELECT 1'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: notes-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=database;Database=NotesDB;User Id=sa;Password=lean@311291;TrustServerCertificate=True;
      - Jwt__SecretKey=ThisIsMySecretKeyForJWTTokenGeneration123456789
      - Jwt__Issuer=NotesApp
      - Jwt__Audience=NotesAppUsers
      - Jwt__ExpireMinutes=1440
    ports:
      - "5000:80"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - notes-network
    restart: unless-stopped

  frontend:
    build:
      context: ./noteApp
      dockerfile: Dockerfile
    container_name: notes-web
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - notes-network
    restart: unless-stopped

  # Nginx reverse proxy for frontend to backend communication
  nginx-proxy:
    image: nginx:alpine
    container_name: notes-proxy
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - notes-network
    restart: unless-stopped

networks:
  notes-network:
    driver: bridge

volumes:
  sqldata: